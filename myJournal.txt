January 17
> created file: "bot.py"
> created file: ".env"
> installed module: "slackclient"
> installed module: "python-dotenv"
> set up github repo
> installed software to help set up local web server: ngrok
> installed module: flask
> installed module: slackeventsapi
> tried to set up event handling, failed due to an issue with the handler not firing?
>> potential issue with handler or event detection?
> resolved previous issue with event handling: bot was not added to the channel, therefore could not listen for events!

January 18
> Added slash command '/message-count': Returns the user's current number of messages sent to the channel
> Set up endpoint for /message-count
> Added logic to temporarily store number of messages a user has sent

January 19
> Added some text command placeholders: !weather, !joke, !messagecount, !help, !tasktest
> !tasktest prints a differently formatted (using Markdown) automated message with an altered icon and name
> Formatted a text file of jokes and responses (Referenced from: https://github.com/wesbos/dad-jokes)
> Ran into a synchronous issue: Sometimes the response to the joke gets sent before the joke?

January 20
> Obtained API key for OpenWeather
> installed module: requests
> !weather now makes an OpenWeather API call and returns basic weather information
> This command currently uses Ontario as a default, more interactivity should be implemented that allows the user to specify a specific location or a specific date (within reason)

January 21
> Added event handler for event: reaction added
> !tasktest now updates message when the user reacts
> Added basic exception handling for non-text based messages

January 24
> Refactored code: split up previously-monolithic code into separate files
> Some bug fixing as a result of the refactoring
> installed module: google_trans_new
> Added new command using regex: ![a-zA-z][a-zA-z]to[a-zA-z][a-zA-z]
> New command translates the message specified by the user

January 30
> Encountered an issue where my .env file disappeared
> Spent some time restoring said file and retrieving lost tokens
> Some initial set up for SQL

February 2
> Successfully connected to SQL database from Slack
> Created a database for testing: testdatabase
> Created a table for testing: Courses
> Populated table with some example entries
> Added two new commands: !readsql and !select
> !readsql returns everything from the Courses table
> !select returns the value under the "what" column from the Courses table given a course code